module import
language statixpie

fixture [[
  module test:import
  
  [[...]]
  
  data Foo = foreign java Foo {}
  func main() -> int = 0
]]

// simple imports without renaming.
// Note: simple tests use different names because of 
// duplicate name errors outside test region
test simple function import [[
  import test:[[import]]:[[foo]]
  func [[foo]]() -> int = 0
]] analysis fails
   resolve #1
   resolve #2 to #3
   error like "Duplicate function" at #2
   error like "Duplicate function" at #3
test simple data import [[
  import test:[[import]]:[[Bar]]
  data [[Bar]] = foreign java Bar {}
]] 2 errors at #2, #3
   resolve #1
   resolve #2 to #3
   error like "Duplicate definition" at #2
   error like "Duplicate definition" at #3
test simple import undefined submodule [[ import example:main ]] analysis fails
test simple import undefined final element [[ import test:import:[[nope]] ]] analysis fails

test simple renaming function import [[
  import test:[[import]]:[[main]] as [[func]]
  func test() -> int = [[func]]()
]] analysis succeeds
   resolve #1
   resolve #2
   resolve #4 to #3
test simple renaming data import [[
  import test:[[import]]:[[Foo]] as [[Bar]]
  func test(foo: [[Bar]]) -> int = 4
]] analysis succeeds
   resolve #1
   resolve #2
   resolve #4 to #3


// todo: check duplicate def error on func
/* todo:
   - test renaming to same name.
   - `import {foo, bar}:func` warning: no-op
   - `import example:foo as example:foo` warning: no-op
   - `import example:{foo as example:foo}` warning: no-op
   - `import example:{foo}` warning: multi-import with single element
*/
