module statics/project

imports

  signatures/lex/literal-sig
  signatures/type-sig
  signatures/statixpie-sig
  statics/base
  statics/data
  statics/func_def

rules

  projectOk : scope
  projectOk(s_root) :- 
    s_root -ROOT-> s_root,
    declareDeduplicatedModules(s_root).
    // todo: create scopes for built-in types

  programOk : scope * Start
  programOk(s_project, Program(module@Module(_, name), imports, defs)) :- {s_mod}
    // todo imports
    new s_mod,
    s_mod -ROOT-> s_project,
    setContext(s_mod, "module_name", ContextName(name)),
    declareWipModule(s_project, s_mod, module),
    defsOk(s_mod, defs).

  defOk : scope * Def
  defsOk maps defOk(*, list(*))
  defOk(s_mod, FuncDef2Def(funcDef)) :-
    funcDefOk(s_mod, funcDef).
  defOk(s_mod, DataDef2Def(dataDef)) :-
    dataDefOk(s_mod, dataDef).
